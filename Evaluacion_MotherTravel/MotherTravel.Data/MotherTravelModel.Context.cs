//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MotherTravel.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MotherTravelEntities : DbContext
    {
        public MotherTravelEntities()
            : base("name=MotherTravelEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Detalle> Detalle { get; set; }
        public virtual DbSet<Factura> Factura { get; set; }
        public virtual DbSet<PersonaFiscal> PersonaFiscal { get; set; }
        public virtual DbSet<Producto> Producto { get; set; }
    
        public virtual ObjectResult<sp_InsertPersonaFiscal_Result> sp_InsertPersonaFiscal(string nombre, string apellido, string rfc, string razon_social, string direccion, string fecha_nacimiento, string telefono, string email, string categoria, string tipo_persona)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var rfcParameter = rfc != null ?
                new ObjectParameter("rfc", rfc) :
                new ObjectParameter("rfc", typeof(string));
    
            var razon_socialParameter = razon_social != null ?
                new ObjectParameter("razon_social", razon_social) :
                new ObjectParameter("razon_social", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var fecha_nacimientoParameter = fecha_nacimiento != null ?
                new ObjectParameter("fecha_nacimiento", fecha_nacimiento) :
                new ObjectParameter("fecha_nacimiento", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var categoriaParameter = categoria != null ?
                new ObjectParameter("categoria", categoria) :
                new ObjectParameter("categoria", typeof(string));
    
            var tipo_personaParameter = tipo_persona != null ?
                new ObjectParameter("tipo_persona", tipo_persona) :
                new ObjectParameter("tipo_persona", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_InsertPersonaFiscal_Result>("sp_InsertPersonaFiscal", nombreParameter, apellidoParameter, rfcParameter, razon_socialParameter, direccionParameter, fecha_nacimientoParameter, telefonoParameter, emailParameter, categoriaParameter, tipo_personaParameter);
        }
    
        public virtual ObjectResult<sp_DeleteFactura_Result> sp_DeleteFactura(Nullable<int> idFactura)
        {
            var idFacturaParameter = idFactura.HasValue ?
                new ObjectParameter("idFactura", idFactura) :
                new ObjectParameter("idFactura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DeleteFactura_Result>("sp_DeleteFactura", idFacturaParameter);
        }
    
        public virtual ObjectResult<sp_InsertFactura_Result> sp_InsertFactura(Nullable<int> idEmisor, Nullable<int> idReceptor)
        {
            var idEmisorParameter = idEmisor.HasValue ?
                new ObjectParameter("idEmisor", idEmisor) :
                new ObjectParameter("idEmisor", typeof(int));
    
            var idReceptorParameter = idReceptor.HasValue ?
                new ObjectParameter("idReceptor", idReceptor) :
                new ObjectParameter("idReceptor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_InsertFactura_Result>("sp_InsertFactura", idEmisorParameter, idReceptorParameter);
        }
    
        public virtual ObjectResult<sp_UpdateFactura_Result> sp_UpdateFactura(Nullable<int> idFactura, Nullable<int> idEmisor, Nullable<int> idReceptor, Nullable<System.DateTime> fecha, string facturaXML)
        {
            var idFacturaParameter = idFactura.HasValue ?
                new ObjectParameter("idFactura", idFactura) :
                new ObjectParameter("idFactura", typeof(int));
    
            var idEmisorParameter = idEmisor.HasValue ?
                new ObjectParameter("idEmisor", idEmisor) :
                new ObjectParameter("idEmisor", typeof(int));
    
            var idReceptorParameter = idReceptor.HasValue ?
                new ObjectParameter("idReceptor", idReceptor) :
                new ObjectParameter("idReceptor", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var facturaXMLParameter = facturaXML != null ?
                new ObjectParameter("facturaXML", facturaXML) :
                new ObjectParameter("facturaXML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UpdateFactura_Result>("sp_UpdateFactura", idFacturaParameter, idEmisorParameter, idReceptorParameter, fechaParameter, facturaXMLParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_InsertFactura1(Nullable<int> idEmisor, Nullable<int> idReceptor)
        {
            var idEmisorParameter = idEmisor.HasValue ?
                new ObjectParameter("idEmisor", idEmisor) :
                new ObjectParameter("idEmisor", typeof(int));
    
            var idReceptorParameter = idReceptor.HasValue ?
                new ObjectParameter("idReceptor", idReceptor) :
                new ObjectParameter("idReceptor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_InsertFactura1", idEmisorParameter, idReceptorParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_AgregarFactura(Nullable<int> idEmisor, Nullable<int> idReceptor, Nullable<int> idProducto, Nullable<int> cantidad, Nullable<decimal> precio)
        {
            var idEmisorParameter = idEmisor.HasValue ?
                new ObjectParameter("idEmisor", idEmisor) :
                new ObjectParameter("idEmisor", typeof(int));
    
            var idReceptorParameter = idReceptor.HasValue ?
                new ObjectParameter("idReceptor", idReceptor) :
                new ObjectParameter("idReceptor", typeof(int));
    
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("idProducto", idProducto) :
                new ObjectParameter("idProducto", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_AgregarFactura", idEmisorParameter, idReceptorParameter, idProductoParameter, cantidadParameter, precioParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_ActualizaFactura(Nullable<int> idFactura, Nullable<int> idEmisor, Nullable<int> idReceptor, Nullable<int> idProducto, Nullable<int> cantidad, Nullable<decimal> precio)
        {
            var idFacturaParameter = idFactura.HasValue ?
                new ObjectParameter("idFactura", idFactura) :
                new ObjectParameter("idFactura", typeof(int));
    
            var idEmisorParameter = idEmisor.HasValue ?
                new ObjectParameter("idEmisor", idEmisor) :
                new ObjectParameter("idEmisor", typeof(int));
    
            var idReceptorParameter = idReceptor.HasValue ?
                new ObjectParameter("idReceptor", idReceptor) :
                new ObjectParameter("idReceptor", typeof(int));
    
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("idProducto", idProducto) :
                new ObjectParameter("idProducto", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_ActualizaFactura", idFacturaParameter, idEmisorParameter, idReceptorParameter, idProductoParameter, cantidadParameter, precioParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_EliminaFactura(Nullable<int> idFactura)
        {
            var idFacturaParameter = idFactura.HasValue ?
                new ObjectParameter("idFactura", idFactura) :
                new ObjectParameter("idFactura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_EliminaFactura", idFacturaParameter);
        }
    }
}
